using ARPG_AE_JOKER;
using ARPG_AE_JOKER.SkillEditor;
using UnityEngine;


/// <summary>
/// 多行轨道
/// </summary>
public class _轨道名称CS : MultiLineTrack<_Event类名CS, _多行轨道子轨道名称CS>
{
    public static string TrackName = "_轨道名称中文";
}

/// <summary>
/// 多行轨道子轨道
/// </summary>
public class _多行轨道子轨道名称CS : MultiLineChildTrack<_Event类名CS, _多行轨道子轨道的单个Item名称CS>
{
    /// <summary>
    /// 重写此方法来匹配对应拖拽的类型
    /// </summary>
    /// <returns></returns>
    public override string[] GetObjectType()
    {
        return new string[] { typeof(_变化的对象类型).FullName };
    }

    /// <summary>
    /// 重写此方法来定义Item数据的长度
    /// </summary>
    /// <param name="clip"></param>
    /// <returns></returns>
    public override int CaculateObjectLength(object clip)
    {
        if (m_ItemData.GetFrameDuration(0) == -1)
            return 30;
        return m_ItemData.GetFrameDuration(0);
    }
}

/// <summary>
/// 多行轨道子轨道的单个Item
/// </summary>
public class _多行轨道子轨道的单个Item名称CS : MultLineTrackItem<_Event类名CS>
{
    /// <summary>
    /// 重写此属性来定义普通状态颜色
    /// </summary>
    protected override Color m_normalColor => new Color(_Item的普通状态颜色);
    /// <summary>
    /// 重写此属性来定义选中颜色
    /// </summary>
    protected override Color m_selectColor => new Color(_Item的选中状态颜色);

    /// <summary>
    /// 定义Item的 宽度 名字 和位置
    /// </summary>
    #region Caculate外观

    public override string CaculateName()
    {
        return m_ItemData.GetName();
    }

    public override float CaculatePosiotion(float frameUniWidth)
    {
        return frameIndex * frameUniWidth;
    }

    public override float CaculateWidth(float frameUniWidth)
    {
        return frameUniWidth * m_ItemData.GetFrameDuration(0);
    }

    #endregion Caculate外观

    /// <summary>
    /// 选中
    /// </summary> 
    public override void Select()
    {
        _Event类名CSInspectorHelper.Instance.Inspector(ItemData);
    }
}
